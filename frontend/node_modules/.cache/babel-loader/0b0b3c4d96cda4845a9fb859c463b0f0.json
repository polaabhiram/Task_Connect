{"ast":null,"code":"var _jsxFileName = \"/Users/abhiram/Desktop/TaskConnect/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link, useNavigate, useLocation } from 'react-router-dom';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport PostJob from './components/PostJob';\n// Import the renamed component\nimport WorkerJobsView from './components/WorkerJobsView'; // <-- RENAMED IMPORT\nimport Applications from './components/Applications';\nimport ReportPage from './components/ReportPage';\n\n// Import base styles - adjust path if necessary\nimport './index.css';\n// You might have specific App styles too\n// import './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to track authentication status and user role\n  const [authState, setAuthState] = useState({\n    isAuthenticated: !!localStorage.getItem('token'),\n    token: localStorage.getItem('token'),\n    role: localStorage.getItem('role') // Get role directly\n  });\n  const [showRegister, setShowRegister] = useState(false); // State for toggling Login/Register view\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Effect to update auth state if localStorage changes (e.g., login/logout in another tab)\n  useEffect(() => {\n    const handleStorageChange = () => {\n      const token = localStorage.getItem('token');\n      const role = localStorage.getItem('role');\n      console.log('Storage changed! Token:', token, 'Role:', role); // Debug log\n      setAuthState({\n        isAuthenticated: !!token,\n        token,\n        role\n      });\n    };\n\n    // Add listener\n    window.addEventListener('storage', handleStorageChange);\n    // Initial check in case state is stale on load\n    handleStorageChange();\n\n    // Cleanup listener on unmount\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []); // Empty dependency array means this runs once on mount and cleans up on unmount\n\n  // Handle user logout\n  const handleLogout = () => {\n    console.log('Logging out...');\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    setAuthState({\n      isAuthenticated: false,\n      token: null,\n      role: null\n    }); // Update state\n    setShowRegister(false); // Reset to login view\n    navigate('/login'); // Redirect to login page\n  };\n\n  // Toggle between Login and Register forms on the login page\n  const toggleRegister = () => {\n    setShowRegister(!showRegister);\n    // Navigate to login page if toggling register from another page\n    if (location.pathname !== '/login') {\n      navigate('/login');\n    }\n  };\n\n  // Determine navigation links based on authentication state and role\n  const renderNavLinks = () => {\n    if (!authState.isAuthenticated) {\n      // User is not logged in\n      return showRegister ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-link\",\n        onClick: toggleRegister,\n        children: \"Already have an account? Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-link\",\n        onClick: toggleRegister,\n        children: \"Need an account? Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this);\n    } else {\n      // User is logged in\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard\",\n          className: \"nav-link\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), authState.role === 'professional-body' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/post-job\",\n            className: \"nav-link\",\n            children: \"Post Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/applications\",\n            className: \"nav-link\",\n            children: \"View Applications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : authState.role === 'worker' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/jobs\",\n            className: \"nav-link\",\n            children: \"View Jobs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/report\",\n            className: \"nav-link\",\n            children: \"Generate Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : null /* Handle potential other roles or null role */, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"nav-link logout-btn-nav\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TaskConnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: renderNavLinks()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            showRegister: showRegister,\n            toggleRegister: toggleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), authState.isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), authState.role === 'professional-body' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/post-job\",\n              element: /*#__PURE__*/_jsxDEV(PostJob, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/applications\",\n              element: /*#__PURE__*/_jsxDEV(Applications, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), authState.role === 'worker' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/jobs\",\n              element: /*#__PURE__*/_jsxDEV(WorkerJobsView, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/report\",\n              element: /*#__PURE__*/_jsxDEV(ReportPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: authState.isAuthenticated ? /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"welcome-text\",\n            children: \"Welcome back to TaskConnect!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"welcome-text\",\n            children: \"Welcome to TaskConnect! Please login or register.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n// Wrap App with Router\n_s(App, \"NqrOC6dnt6G9/U9ASDy4fIqEpBA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = App;\nexport default function AppWrapper() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 10\n  }, this);\n}\n_c2 = AppWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppWrapper\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Link","useNavigate","useLocation","Login","Dashboard","PostJob","WorkerJobsView","Applications","ReportPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","authState","setAuthState","isAuthenticated","localStorage","getItem","token","role","showRegister","setShowRegister","navigate","location","handleStorageChange","console","log","window","addEventListener","removeEventListener","handleLogout","removeItem","toggleRegister","pathname","renderNavLinks","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","to","path","element","_c","AppWrapper","_c2","$RefreshReg$"],"sources":["/Users/abhiram/Desktop/TaskConnect/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link, useNavigate, useLocation } from 'react-router-dom';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport PostJob from './components/PostJob';\n// Import the renamed component\nimport WorkerJobsView from './components/WorkerJobsView'; // <-- RENAMED IMPORT\nimport Applications from './components/Applications';\nimport ReportPage from './components/ReportPage';\n\n// Import base styles - adjust path if necessary\nimport './index.css';\n// You might have specific App styles too\n// import './App.css';\n\nfunction App() {\n  // State to track authentication status and user role\n  const [authState, setAuthState] = useState({\n    isAuthenticated: !!localStorage.getItem('token'),\n    token: localStorage.getItem('token'),\n    role: localStorage.getItem('role') // Get role directly\n  });\n  const [showRegister, setShowRegister] = useState(false); // State for toggling Login/Register view\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Effect to update auth state if localStorage changes (e.g., login/logout in another tab)\n  useEffect(() => {\n    const handleStorageChange = () => {\n      const token = localStorage.getItem('token');\n      const role = localStorage.getItem('role');\n      console.log('Storage changed! Token:', token, 'Role:', role); // Debug log\n      setAuthState({\n        isAuthenticated: !!token,\n        token,\n        role\n      });\n    };\n\n    // Add listener\n    window.addEventListener('storage', handleStorageChange);\n    // Initial check in case state is stale on load\n    handleStorageChange();\n\n    // Cleanup listener on unmount\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []); // Empty dependency array means this runs once on mount and cleans up on unmount\n\n  // Handle user logout\n  const handleLogout = () => {\n    console.log('Logging out...');\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    setAuthState({ isAuthenticated: false, token: null, role: null }); // Update state\n    setShowRegister(false); // Reset to login view\n    navigate('/login'); // Redirect to login page\n  };\n\n  // Toggle between Login and Register forms on the login page\n  const toggleRegister = () => {\n    setShowRegister(!showRegister);\n    // Navigate to login page if toggling register from another page\n    if (location.pathname !== '/login') {\n      navigate('/login');\n    }\n  };\n\n  // Determine navigation links based on authentication state and role\n  const renderNavLinks = () => {\n    if (!authState.isAuthenticated) {\n      // User is not logged in\n      return showRegister ? (\n        <button className=\"nav-link\" onClick={toggleRegister}>\n          Already have an account? Login\n        </button>\n      ) : (\n        <button className=\"nav-link\" onClick={toggleRegister}>\n          Need an account? Register\n        </button>\n      );\n    } else {\n      // User is logged in\n      return (\n        <>\n          <Link to=\"/dashboard\" className=\"nav-link\">Dashboard</Link>\n          {/* Conditional links based on role */}\n          {authState.role === 'professional-body' ? (\n            <>\n              <Link to=\"/post-job\" className=\"nav-link\">Post Job</Link>\n              <Link to=\"/applications\" className=\"nav-link\">View Applications</Link>\n            </>\n          ) : authState.role === 'worker' ? (\n            <>\n              {/* Use the renamed component route */}\n              <Link to=\"/jobs\" className=\"nav-link\">View Jobs</Link>\n              <Link to=\"/report\" className=\"nav-link\">Generate Report</Link>\n            </>\n          ) : null /* Handle potential other roles or null role */}\n          {/* Logout button always shown when authenticated */}\n          <button onClick={handleLogout} className=\"nav-link logout-btn-nav\">Logout</button>\n        </>\n      );\n    }\n  };\n\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"header-container\">\n        <h1>TaskConnect</h1>\n        <nav className=\"navbar\">\n          {renderNavLinks()}\n        </nav>\n      </header>\n      <main className=\"main-content\"> {/* Added a main wrapper */}\n        <Routes>\n          <Route\n            path=\"/login\"\n            element={<Login showRegister={showRegister} toggleRegister={toggleRegister} />}\n          />\n          {/* Protected Routes - Render only if authenticated */}\n          {authState.isAuthenticated && (\n            <>\n              <Route path=\"/dashboard\" element={<Dashboard />} />\n              {/* Routes specific to professional-body */}\n              {authState.role === 'professional-body' && (\n                <>\n                  <Route path=\"/post-job\" element={<PostJob />} />\n                  <Route path=\"/applications\" element={<Applications />} />\n                </>\n              )}\n              {/* Routes specific to worker */}\n              {authState.role === 'worker' && (\n                <>\n                  {/* Use the renamed component */}\n                  <Route path=\"/jobs\" element={<WorkerJobsView />} />\n                  <Route path=\"/report\" element={<ReportPage />} />\n                </>\n              )}\n            </>\n          )}\n          {/* Default route - shows welcome message or redirects */}\n          <Route\n            path=\"/\"\n            element={\n              authState.isAuthenticated ? (\n                <h2 className=\"welcome-text\">Welcome back to TaskConnect!</h2>\n              ) : (\n                <h2 className=\"welcome-text\">Welcome to TaskConnect! Please login or register.</h2>\n              )\n            }\n          />\n          {/* Optional: Add a catch-all or Not Found route */}\n          {/* <Route path=\"*\" element={<NotFoundComponent />} /> */}\n        </Routes>\n      </main>\n    </div>\n  );\n}\n\n// Wrap App with Router\nexport default function AppWrapper() {\n  return <Router><App /></Router>;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}