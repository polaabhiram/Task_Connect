{"ast":null,"code":"var _jsxFileName = \"/Users/abhiram/Documents/html/TaskConnect/TaskConnect/frontend/src/components/ReportPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportPage = () => {\n  _s();\n  const [report, setReport] = useState('');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setMessage('No token found. Please log in.');\n    } else {\n      fetchReport(token);\n    }\n  }, []);\n  const fetchReport = async token => {\n    try {\n      setMessage('Generating report...');\n      const response = await axios.get('http://localhost:3000/api/jobs/report', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Report response:', response.data);\n      setReport(response.data.report);\n      setMessage('Report generated successfully');\n      setTimeout(() => setMessage(''), 5000);\n    } catch (err) {\n      console.error('Report Error:', err.response ? JSON.stringify(err.response.data, null, 2) : err.message);\n      setMessage('Error generating report. Check console.');\n      setTimeout(() => setMessage(''), 5000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Website Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), report && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: report\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportPage, \"hyhC7PWKQ1SOPJBeYsmDd7kZLqM=\");\n_c = ReportPage;\nexport default ReportPage;\nvar _c;\n$RefreshReg$(_c, \"ReportPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ReportPage","_s","report","setReport","message","setMessage","token","localStorage","getItem","fetchReport","response","get","headers","Authorization","console","log","data","setTimeout","err","error","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhiram/Documents/html/TaskConnect/TaskConnect/frontend/src/components/ReportPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ReportPage = () => {\n  const [report, setReport] = useState('');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setMessage('No token found. Please log in.');\n    } else {\n      fetchReport(token);\n    }\n  }, []);\n\n  const fetchReport = async (token) => {\n    try {\n      setMessage('Generating report...');\n      const response = await axios.get('http://localhost:3000/api/jobs/report', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      console.log('Report response:', response.data);\n      setReport(response.data.report);\n      setMessage('Report generated successfully');\n      setTimeout(() => setMessage(''), 5000);\n    } catch (err) {\n      console.error('Report Error:', err.response ? JSON.stringify(err.response.data, null, 2) : err.message);\n      setMessage('Error generating report. Check console.');\n      setTimeout(() => setMessage(''), 5000);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Website Report</h1>\n      {message && <p>{message}</p>}\n      {report && <pre>{report}</pre>}\n    </div>\n  );\n};\n\nexport default ReportPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVD,UAAU,CAAC,gCAAgC,CAAC;IAC9C,CAAC,MAAM;MACLI,WAAW,CAACH,KAAK,CAAC;IACpB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,WAAW,GAAG,MAAOH,KAAK,IAAK;IACnC,IAAI;MACFD,UAAU,CAAC,sBAAsB,CAAC;MAClC,MAAMK,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,uCAAuC,EAAE;QACxEC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG;MAC9C,CAAC,CAAC;MACFQ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,QAAQ,CAACM,IAAI,CAAC;MAC9Cb,SAAS,CAACO,QAAQ,CAACM,IAAI,CAACd,MAAM,CAAC;MAC/BG,UAAU,CAAC,+BAA+B,CAAC;MAC3CY,UAAU,CAAC,MAAMZ,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IACxC,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZJ,OAAO,CAACK,KAAK,CAAC,eAAe,EAAED,GAAG,CAACR,QAAQ,GAAGU,IAAI,CAACC,SAAS,CAACH,GAAG,CAACR,QAAQ,CAACM,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,GAAGE,GAAG,CAACd,OAAO,CAAC;MACvGC,UAAU,CAAC,yCAAyC,CAAC;MACrDY,UAAU,CAAC,MAAMZ,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IACxC;EACF,CAAC;EAED,oBACEN,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBtB,OAAO,iBAAIL,OAAA;MAAAuB,QAAA,EAAIlB;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3BxB,MAAM,iBAAIH,OAAA;MAAAuB,QAAA,EAAMpB;IAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV,CAAC;AAACzB,EAAA,CArCID,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}